{"version":3,"sources":["images/logo.png","pages/Navigation.js","components/Title.js","components/Image.js","components/RecipeCard.js","components/getForm.js","pages/startPage.js","pages/Likes.js","pages/steps.js","pages/preferences.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","Body","id","Nav","Item","to","Button","className","src","image","alt","Component","Title","Header","this","props","title","styled","h3","Image","ImageHolder","source","img","RecipeCard","recipes","map","item","index","Card","text","calories","carbs","fat","protein","show","IconButton","aria-label","onClick","localStorage","getItem","removeItem","setItem","JSON","stringify","setLikes","setDislike","div","getForm","state","user","type_rec","handleInputChange","bind","handleSubmit","name","type","setState","event","target","value","select","alert","history","push","onChange","onSubmit","selected","valuetext","startPage","setMaxCalories","newValue","maxCalories","setMaxCarbs","maxCarbs","setMaxProtein","maxProtein","setMaxFat","maxFat","focus","likes","dislikes","url","console","log","fetch","then","response","json","data","getUserName","refreshUser","setSliders","getRecipesApi","preventDefault","form","h2","informatie","Infobox","GetRecipes","length","Typography","gutterBottom","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","section","Likes","Object","entries","key","includes","parse","steps","match","params","ingredients","nutrition","Map","api_key","ing_url","analyzedInstructions","catch","error","ing","amount","metric","unit","keys","preferences","userName","window","location","href","test","App","AppContainer","basename","exact","path","component","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb037f7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f8913ece.png\";","import { Nav } from 'rsuite';\r\nimport { Navbar } from 'rsuite';\r\nimport React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport image from \"../images/logo.png\"\r\nimport '../App.css';\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar>\r\n                <Navbar.Body id=\"navbox\">\r\n                    <Nav id=\"nav\">\r\n                    <Nav.Item>\r\n                        <Link to=\"/\">\r\n                                <Button>\r\n                                    <img className=\"logo\" src={image} alt=\"logo\"/>\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                        <Link to=\"/\">\r\n                                <Button>\r\n                                    Home\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>      \r\n                            <Link to=\"/likes\">\r\n                                <Button>\r\n                                    Likes\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                        <Link to=\"/preferences\">\r\n                                <Button>\r\n                                    Preferences\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Body>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default class Title extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                {this.props.title}\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = styled.h3`\r\n    text-align: center;\r\n    margin: 5px;\r\n    font-family: monospace;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    `;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default class Image extends Component {\r\n    render() {\r\n        return (\r\n            <ImageHolder src={this.props.source} alt={this.props.title} />\r\n        )\r\n    }\r\n}\r\n\r\nconst ImageHolder = styled.img`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;","import React, { Component } from 'react';\r\nimport Title from './Title';\r\nimport Image from './Image';\r\nimport styled from 'styled-components';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default class RecipeCard extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"recipes\">\r\n                {this.props.recipes.map((item, index) => {\r\n                    return (\r\n                        <Card key={item.title}>\r\n                            <div>\r\n                                <Link to={\"/recipes/\" + item.id}>\r\n                                    <Button>\r\n                                        <Image source={item.image} text={item.title} />\r\n                                    </Button>\r\n                                </Link>\r\n                                <Title title={item.title} />\r\n                                <h3>Per serving: </h3>\r\n                                <ul>\r\n                                    <li>calories: {item.calories}</li>\r\n                                    <li>carbs: {item.carbs}</li>\r\n                                    <li>fat: {item.fat}</li>\r\n                                    <li>protein: {item.protein}</li>\r\n                                </ul>\r\n                                {this.props.show === true &&\r\n                                    <div>\r\n                                        <IconButton id={item.title} aria-label=\"like recipe\" onClick={() => setLikes(item)}>\r\n                                            <ThumbUpIcon />\r\n                                        </IconButton>\r\n                                        <IconButton aria-label=\"dislike recipe\" onClick={() => setDislike(item)}>\r\n                                            <ThumbDownIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </Card>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction setLikes(item) {\r\n    if (localStorage.getItem(item.id + \"dislike\") != null) {\r\n        localStorage.removeItem(item.id + \"dislike\");\r\n    }\r\n    localStorage.setItem(item.id + \"like\", JSON.stringify(item))\r\n}\r\n\r\nfunction setDislike(item) {\r\n    if (localStorage.getItem(item.id + \"like\") != null) {\r\n        localStorage.removeItem(item.id + \"like\");\r\n    }\r\n    localStorage.setItem(item.id + \"dislike\", JSON.stringify(item))\r\n}\r\n\r\nconst Card = styled.div`\r\n\tmax-width: 350px;\r\n\twidth: 100%;\r\n\tdisplay: inline-block;\r\n\tborder-radius: 3px;\r\n\ttext-decoration: none;\r\n\tbackground-color: #EFA48B;\r\n    margin: 0 10px 25px;\r\n    box-shadow: 7px 7px 50px -10px rgba(0, 0, 0, .5);\r\n`;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nexport default class getForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            type_rec: \"\",\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let name = localStorage.getItem(\"user\");\r\n        if (name !== null) {\r\n            let type = localStorage.getItem(name);\r\n            this.setState({ user: name });\r\n            this.setState({ type_rec: type })\r\n        }\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'select' ? target.select : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if (this.props.name) {\r\n            if (this.state.user && this.state.type_rec) {\r\n                localStorage.setItem(\"user\", this.state.user);\r\n                localStorage.setItem(this.state.user, this.state.type_rec);\r\n            }\r\n            else if (!this.state.user && this.state.type_rec) {\r\n                alert('Name cannot be emty');\r\n            }\r\n            else if (!this.state.type_rec && this.state.user) {\r\n                localStorage.setItem(\"user\", this.state.user);\r\n                localStorage.setItem(this.state.user, \"Endurance sports\");\r\n                this.setState({ type_rec: \"Endurance sports\" })\r\n            }\r\n            else {\r\n                alert('Fill in your name and choose where you want to focus on')\r\n            }\r\n        } else {\r\n            if (this.state.type_rec) {\r\n                localStorage.setItem(this.state.user, this.state.type_rec);\r\n                \r\n               this.props.history.push('/');\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let bool = this.props.name;\r\n        let name = \"\";\r\n        if (bool) {\r\n            name =\r\n                <label>\r\n                    Name:\r\n                     <input type=\"text\" name=\"user\" value={this.state.user} onChange={this.handleInputChange} />\r\n                </label>\r\n        }\r\n        return (\r\n            <form name=\"preferences\" onSubmit={this.handleSubmit}>\r\n                {name}\r\n                <label>\r\n                <select type=\"select\" name=\"type_rec\" value={this.state.type_rec} onChange={this.handleInputChange}>\r\n                        <option value=\"Endurance sports\" selected>Endurance sports</option>\r\n                        <option value=\"Power sports\">Power sports</option>\r\n                        <option value=\"Keto\">Keto</option>\r\n                        <option value=\"Weight loss\">Weight loss</option>\r\n                        <option value=\"Nothing\">Nothing specifics</option>\r\n                    </select>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport styled from 'styled-components';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport GetForm from '../components/getForm';\r\n\r\nfunction valuetext(value) {\r\n    return `${value}g carbs`;\r\n}\r\nexport default class startPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            focus: \"\",\r\n            show: false,\r\n            maxCarbs: 30,\r\n            maxCalories: 400,\r\n            maxProtein: 30,\r\n            maxFat: 30,\r\n            recipes: [],\r\n            likes: [],\r\n            dislikes: []\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    setMaxCalories = (event, newValue) => {\r\n        this.setState({ maxCalories: newValue });\r\n    }\r\n    setMaxCarbs = (event, newValue) => {\r\n        this.setState({ maxCarbs: newValue });\r\n    }\r\n\r\n    setMaxProtein = (event, newValue) => {\r\n        this.setState({ maxProtein: newValue });\r\n    }\r\n    setMaxFat = (event, newValue) => {\r\n        this.setState({ maxFat: newValue });\r\n    }\r\n    \r\n    setSliders() {\r\n        var focus = this.state.focus\r\n        if (focus === \"Endurance sports\") {\r\n            this.setState({ maxCalories: 700 });\r\n            this.setState({ maxCarbs: 100 });\r\n            this.setState({ maxProtein: 80 });\r\n            this.setState({ maxFat: 20 });\r\n        }\r\n        else if (focus === \"Power sports\") {\r\n            this.setState({ maxCalories: 600 });\r\n            this.setState({ maxCarbs: 50 });\r\n            this.setState({ maxProtein: 100 });\r\n            this.setState({ maxFat: 40 });\r\n        }\r\n        else if (focus === \"Keto\") {\r\n            this.setState({ maxCalories: 500 });\r\n            this.setState({ maxCarbs: 10 });\r\n            this.setState({ maxProtein: 10 });\r\n            this.setState({ maxFat: 100 });\r\n        }\r\n        else if (focus === \"Weight loss\") {\r\n            this.setState({ maxCalories: 100 });\r\n            this.setState({ maxCarbs: 50 });\r\n            this.setState({ maxProtein: 50 });\r\n            this.setState({ maxFat: 50 });\r\n        }\r\n    }\r\n\r\n    getRecipesApi() {\r\n        var api_key = 'f92d5c6716cc42e3922e26d9bc1ad0b5';\r\n        var url = 'https://api.spoonacular.com/recipes/findByNutrients?apiKey=';\r\n        url += api_key;\r\n        url += '&maxCalories=' + this.state.maxCalories\r\n        url += '&maxCarbs=' + this.state.maxCarbs\r\n        url += '&maxProtein=' + this.state.maxProtein\r\n        url += '&maxFat=' + this.state.maxFat\r\n        console.log(url);\r\n        fetch(url)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    recipes: data\r\n                });\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let name = getUserName();\r\n        if (name !== null) {\r\n            this.refreshUser(name)\r\n        }\r\n    }\r\n\r\n    async refreshUser(value) {\r\n        let type = localStorage.getItem(value);\r\n        this.setState({ user: value });\r\n        await this.setState({ focus: type })\r\n        await this.setSliders()\r\n        await this.getRecipesApi()\r\n        this.setState({ show: true });\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refreshUser()\r\n    }\r\n\r\n    render() {\r\n        var data = this.state.recipes;\r\n        var bool = true;\r\n        var focus = this.state.focus\r\n        let form = \"\";\r\n        let h2 = \"\";\r\n        let name = getUserName();\r\n        let show = this.state.show;\r\n        let recipes = \"\";\r\n        let informatie = \"\";\r\n        if (show) {\r\n            h2 = <h2>Hello {name}</h2>\r\n            if (focus === \"Endurance sports\") {\r\n                informatie = \r\n                <Infobox id=\"info\">\r\n                    <p><b>Calories</b> are high, because calories are a unit of energie. In this way you have plenty of energy to crush your training.</p>\r\n                    <p> <b>Carbs</b> are an important source of fuel for your body, carbs ensure you don’t hit the wall during your trainings. It is therefore important to keep this high in the diet.</p>\r\n                    <p> <b>Protein</b> are high because it is important to recover well from your trainings so you are ready to hit the next one fully recovered.</p>\r\n                    <p> <b>Fat</b> is a non-essential macro nutrient for endurance athletes, therefore fats should be kept low in the diet of an endurance athlete</p>\r\n                </Infobox>\r\n            }\r\n            else if (focus === \"Power sports\") {\r\n                informatie = \r\n                <Infobox id=\"info\">\r\n                    <p><b>Calories</b> are high, because calories are a unit of energie. In this way you have plenty of energy to crush your training. </p>\r\n                    <p> Don’t neglect the importance of <b>carbs</b> for power training, if you don’t eat enough carbs your body will not be able to reach its full potential during power workouts. Therefore carbs are set an a medium high level. </p>\r\n                    <p> <b>Protein</b> are high because it is essential to help you build muscle whilst recovering from your workout and make those well-earned gains</p>\r\n                    <p> Next to carbs, <b>fats</b> can prove to be a valuable second source of fuel for your body, especially for low to moderate workout intensities. Therefore fat are set an a medium high level. </p>\r\n                </Infobox>\r\n            }\r\n            else if (focus === \"Keto\") {\r\n                informatie = \r\n                <Infobox id=\"info\">\r\n                    <p>The level of <b>calories, carbs and proteinare</b> low, because the idea behind a keto diet is that these three should be as low as possible so your body is forced to burn fat. </p>\r\n                    <p> Therefore <b>fat</b> is high, because this will be your main source of fuel. Fats primarily provide durable and long-lasting energy which is ideal for low to moderate workout intensities</p>\r\n                </Infobox>\r\n            }\r\n            else if (focus === \"Weight loss\") {\r\n                informatie = \r\n                <Infobox id=\"info\">\r\n                    <p>Eating recipes with little <b>calories</b> will ensure you have a calory-deficit at the end of the day which will help you reach your weight loss goals! This is why calories are set on a low level</p>\r\n                    <p> <b>Carbs</b> are medium high, because they are a great source of fuel. It is a myth that carbs will make you fat. </p>\r\n                    <p> <b>Protein</b> will help you to recover well and build muscles in an efficient way. Therefore proteins are set on a medium high level. </p>\r\n                    <p> <b>Fats</b> are also medium high, because they help your body absorb nutrients and protect your organs whilst keeping your body warm. </p>\r\n                </Infobox>\r\n            }\r\n            else{\r\n                informatie = \r\n                <Infobox id=\"info\">\r\n                    <p> <b>Calories</b> are units of energy and they are essential to keep you energized. This is why calories are set on a medium high level.</p>\r\n                    <p> <b>Carbs</b> are medium high, because they are a great source of fuel. It is a myth that carbs will make you fat. </p>\r\n                    <p> <b>Protein</b> will help you to recover well and build muscles in an efficient way. Therefore proteins are set on a medium high level. </p>\r\n                    <p> <b>Fats</b> are also medium high, because they help your body absorb nutrients and protect your organs whilst keeping your body warm. </p>\r\n                </Infobox>\r\n            }\r\n            recipes = <div>\r\n                <GetRecipes>\r\n                    <h2>Recipes for your preference: {focus}</h2>\r\n                    {data.length > 0 && <RecipeCard recipes={data} show={bool} />}\r\n                    <div className=\"sliderbox\">\r\n                        <div id=\"slider\">\r\n                            <Typography id=\"discrete-slider\" gutterBottom> Calories </Typography>\r\n                            <Slider\r\n                                defaultValue={this.state.maxCalories}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={50}\r\n                                marks={true}\r\n                                min={50}\r\n                                max={800}\r\n                                onChange={this.setMaxCalories}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"slider\">\r\n                            <Typography id=\"discrete-slider\" gutterBottom>  Carbs (gram)</Typography>\r\n                            <Slider id=\"slider\"\r\n                                defaultValue={this.state.maxCarbs}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={10}\r\n                                marks={true}\r\n                                min={10}\r\n                                max={100}\r\n                                onChange={this.setMaxCarbs}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"slider\">\r\n                            <Typography id=\"discrete-slider\" gutterBottom>Fat (gram)</Typography>\r\n                            <Slider id=\"slider\"\r\n                                defaultValue={this.state.maxFat}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={10}\r\n                                marks={true}\r\n                                min={1}\r\n                                max={100}\r\n                                onChange={this.setMaxFat}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"slider\">\r\n                            <Typography id=\"discrete-slider\" gutterBottom> Protein (gram)</Typography>\r\n                            <Slider id=\"slider\"\r\n                                defaultValue={this.state.maxProtein}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={10}\r\n                                marks={true}\r\n                                min={10}\r\n                                max={100}\r\n                                onChange={this.setMaxProtein}\r\n                            />\r\n                        </div>\r\n                        <button onClick={this.handleSubmit}>Apply filters</button>\r\n                    </div>\r\n                </GetRecipes>\r\n                {informatie}\r\n            </div>\r\n        } else {\r\n            form =\r\n                <div className=\"container\">\r\n                    <h2>Fill in your personal data and preferences</h2>\r\n                    <GetForm name={true} />\r\n                </div>\r\n        }\r\n        return (\r\n            <div>\r\n                {h2}\r\n                {form}\r\n                {recipes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Infobox = styled.section`\r\n    border: 2px solid black;\r\n    width: 50%;\r\n    background-color: white;\r\n    color: black;\r\n    margin: 10px 0px;\r\n`;\r\n\r\nconst GetRecipes = styled.div`\r\n\tbackground-color: #685369;\r\n  color: white\r\n  padding: 2em;\r\n`;\r\n\r\nfunction getUserName() {\r\n    let name = localStorage.getItem(\"user\");\r\n    if (name !== null) {\r\n        return name;\r\n    }\r\n    return null;\r\n}","import '../App.css';\r\nimport React, { Component } from 'react';\r\nimport RecipeCard from '../components/RecipeCard'\r\n\r\nexport default class Likes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Likes: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var data = [];\r\n        for (let [key, value] of Object.entries(localStorage)) {\r\n            if(key.includes(\"like\") && !key.includes(\"dislike\")){\r\n            data.push(JSON.parse(value));\r\n            }\r\n        }\r\n        this.setState({Likes: data})\r\n    }\r\n    render() {\r\n        var data = this.state.Likes;\r\n        var bool = false;\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Your liked recipes\r\n                </h1>\r\n                {data.length > 0 && <RecipeCard recipes={data} show={bool} />}\r\n            </div>\r\n        )\r\n    }\r\n}","import '../App.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class steps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            steps: [],\r\n            ingredients: [],\r\n            img: \"\",\r\n            nutrition: new Map()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var api_key = 'f92d5c6716cc42e3922e26d9bc1ad0b5';\r\n        var url = 'https://api.spoonacular.com/recipes/';\r\n        url += this.props.match.params.id\r\n\r\n        var ing_url = url\r\n        var img = url\r\n        var nutrition = url\r\n\r\n        ing_url += \"/ingredientWidget.json?apiKey=\"\r\n        ing_url += api_key;\r\n\r\n        img += \"/information?apiKey=\"\r\n        img += api_key;\r\n\r\n        nutrition += \"/nutritionWidget.json?apiKey=\"\r\n        nutrition += api_key;\r\nconsole.log(img);\r\n\r\n\r\n        fetch(ing_url)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    ingredients: data.ingredients\r\n                })\r\n            })\r\n\r\n        fetch(img)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n\r\n            .then((data) => {\r\n                this.setState({\r\n                    img: data.image\r\n                })\r\n                this.setState({\r\n                    steps: data.analyzedInstructions[0].steps\r\n                })\r\n            }).catch((error) => {\r\n                this.setState({\r\n                    steps: []\r\n                })\r\n            })\r\n\r\n        fetch(nutrition)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                var map = new Map()\r\n                map['Calories'] = data.calories\r\n                map['Carbs'] = data.carbs\r\n                map['Fat'] = data.fat\r\n                map['Protein'] = data.protein\r\n                this.setState({\r\n                    nutrition: map\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        var steps = this.state.steps\r\n        var ing = this.state.ingredients\r\n        var image = this.state.img\r\n        var nutrition = this.state.nutrition\r\n        return (\r\n            <div>\r\n                <h1>Steps from recipe {this.state.name}</h1>\r\n                <img id=\"img\" src={image} alt={image} />\r\n                <h3>Ingredients: </h3>\r\n                <ul className=\"ing\">\r\n                    {ing.map((item) => {\r\n                        return (\r\n                            <li>{item.amount.metric.value} {item.amount.metric.unit} {item.name}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <ul className=\"ing\">\r\n                    {Object.keys(nutrition).map((key, item) => {\r\n                        return (\r\n                            <li>{key}: {nutrition[key]}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <section className=\"steps\">\r\n                    {steps.map((item, index) => {\r\n                        return (\r\n                            <p> <h4>step {index + 1}:</h4> {item.step}</p>\r\n                        )\r\n                    })}\r\n                </section>\r\n            </div>)\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class preferences extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            type_rec: \"\"\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let user = getUserName();\r\n        this.setState({ userName: user });\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        this.setState({\r\n            type_rec: value\r\n        });\r\n        \r\n    }\r\n    handleSubmit(event) {\r\n            if (this.state.type_rec) {\r\n                localStorage.setItem(this.state.userName, this.state.type_rec);\r\n            }\r\n            event.preventDefault()\r\n            window.location.href = \"/\"\r\n    }\r\n\r\n    render() {\r\n        let user = this.state.userName;\r\n        let test = \"\"\r\n        if (user) {\r\n            test =\r\n                <div>\r\n                    <h2>\r\n                        Change your preferences:\r\n                    </h2>\r\n                    <form name=\"preferences\" onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            <select type=\"select\" name=\"type_rec\" value={this.state.type_rec} onChange={this.handleInputChange}>\r\n                                <option value=\"Endurance sports\" selected>Endurance sports</option>\r\n                                <option value=\"Power sports\">Power sports</option>\r\n                                <option value=\"Keto\">Keto</option>\r\n                                <option value=\"Weight loss\">Weight loss</option>\r\n                                <option value=\"Nothing\">Nothing specifics</option>\r\n                            </select>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                </div>\r\n        }\r\n        else {\r\n            test =\r\n                <div>\r\n                    <h2>\r\n                        Fill in your preferences on home screen\r\n                    </h2>\r\n                </div>\r\n        }\r\n        return (\r\n            <div>\r\n                {test}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction getUserName() {\r\n    let name = localStorage.getItem(\"user\");\r\n    if (name !== null) {\r\n        return name;\r\n    }\r\n    return null;\r\n}","import './App.css';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Navigation from './pages/Navigation'\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport startPage from './pages/startPage';\nimport likes from './pages/Likes';\nimport steps from './pages/steps';\nimport preferences from './pages/preferences';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AppContainer className=\"App\">\n        <HashRouter basename='/'>\n          <Navigation />\n          <Route exact path='/' component={startPage} />\n          <Route exact path='/likes' component={likes} />\n          <Route exact path='/recipes/:id' component={steps} />\n          <Route exact path='/preferences' component={preferences} />\n        </HashRouter>\n      </AppContainer>\n    );\n  }\n}\nconst AppContainer = styled.main`\n  background-color: #685369;\n  color: white\n  padding: 2em;\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}